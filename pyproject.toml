[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "portfolio-management-suite"
version = "2.0.0"
description = "Comprehensive investment analysis platform with portfolio management tools"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Portfolio Manager", email = "manager@example.com"}
]
maintainers = [
    {name = "Portfolio Manager", email = "manager@example.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
]
keywords = ["portfolio", "trading", "options", "finance", "investment", "analysis"]
requires-python = ">=3.8"
dependencies = [
    "streamlit>=1.28.0",
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    "yfinance>=0.2.0",
    "plotly>=5.0.0",
    "requests>=2.25.0",
    "python-dateutil>=2.8.0",
    "pytz>=2021.1",
]

[project.optional-dependencies]
gui = [
    "rumps>=0.3.0; sys_platform == 'darwin'",
    "pystray>=0.19.0; sys_platform != 'darwin'",
    "Pillow>=8.0.0",
]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.900",
    "pre-commit>=2.15.0",
]
test = [
    "pytest>=6.0",
    "pytest-mock>=3.0",
    "pytest-asyncio>=0.18.0",
]

[project.urls]
homepage = "https://github.com/yourusername/portfolio-management-suite"
repository = "https://github.com/yourusername/portfolio-management-suite"
documentation = "https://github.com/yourusername/portfolio-management-suite/wiki"
changelog = "https://github.com/yourusername/portfolio-management-suite/blob/main/CHANGELOG.md"

[project.scripts]
portfolio-suite = "portfolio_suite.__main__:main"
portfolio-suite-web = "portfolio_suite.__main__:main"
portfolio-options = "portfolio_suite.options_trading.cli:main"
portfolio-tactical = "portfolio_suite.tactical_tracker.cli:main"
portfolio-analysis = "portfolio_suite.trade_analysis.cli:main"

[project.gui-scripts]
"Portfolio Suite" = "portfolio_suite.__main__:main"

[tool.setuptools]
packages = ["portfolio_suite"]
include-package-data = true

[tool.setuptools.package-data]
portfolio_suite = [
    "data/*.csv",
    "data/*.json", 
    "ui/assets/*",
    "gui/assets/*",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
source = ["portfolio_suite"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
